// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeerAppreciation.Beverage.Data.Migrations
{
    using Contexts;

    [DbContext(typeof(BeverageContext))]
    partial class BeverageContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.beverage_hilo", "'beverage_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.beverage_style_hilo", "'beverage_style_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.beverage_type_hilo", "'beverage_type_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.manufacturer_hilo", "'manufacturer_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BeerAppreciation.Beverage.Domain.Beverage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "beverage_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<decimal?>("AlcoholPercent")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int>("BeverageStyleId");

                    b.Property<int>("BeverageTypeId");

                    b.Property<string>("Description");

                    b.Property<int>("ManufacturerId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Url")
                        .HasMaxLength(200);

                    b.Property<int?>("Volume");

                    b.HasKey("Id");

                    b.HasIndex("BeverageStyleId");

                    b.HasIndex("BeverageTypeId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Beverage");
                });

            modelBuilder.Entity("BeerAppreciation.Beverage.Domain.BeverageStyle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "beverage_style_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("BeverageTypeId");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("BeverageTypeId");

                    b.HasIndex("ParentId");

                    b.ToTable("BeverageStyle");
                });

            modelBuilder.Entity("BeerAppreciation.Beverage.Domain.BeverageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "beverage_type_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("BeverageType");
                });

            modelBuilder.Entity("BeerAppreciation.Beverage.Domain.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "manufacturer_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Country");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Manufacturer");
                });

            modelBuilder.Entity("BeerAppreciation.Beverage.Domain.Beverage", b =>
                {
                    b.HasOne("BeerAppreciation.Beverage.Domain.BeverageStyle", "BeverageStyle")
                        .WithMany()
                        .HasForeignKey("BeverageStyleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BeerAppreciation.Beverage.Domain.BeverageType", "BeverageType")
                        .WithMany()
                        .HasForeignKey("BeverageTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BeerAppreciation.Beverage.Domain.Manufacturer", "Manufacturer")
                        .WithMany("Beverages")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BeerAppreciation.Beverage.Domain.BeverageStyle", b =>
                {
                    b.HasOne("BeerAppreciation.Beverage.Domain.BeverageType", "BeverageType")
                        .WithMany("BeverageStyles")
                        .HasForeignKey("BeverageTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BeerAppreciation.Beverage.Domain.BeverageStyle", "Parent")
                        .WithMany("BeverageStyles")
                        .HasForeignKey("ParentId");
                });
#pragma warning restore 612, 618
        }
    }
}
